(self.webpackChunkapp=self.webpackChunkapp||[]).push([[2301],{2301:(e,a,n)=>{"use strict";n.r(a),n.d(a,{default:()=>s});var t=n(2346);const s={init:function(){return{line:new t.x1}},op:function(e,a){var n=e;return n=t.se(n),n=t.DU(n,a.PROCESSING.dCoef),n=t.my(n,3,3),n=t.My(n),n=t.mU(n,.25,.75),t.Lb(n,a.PCLINES.layers,2,2)},tick:function(e,a){var n=a.canvas,s=a.input,o=a.session,r=a.operation,p=a.output,u=a.context,i=a.params,m=Math.max(s.shape[0],s.shape[1]),f=[];o.runOp(r,e,p),t.t4(n,s);for(var C=0;C<p.size/4;C+=1){var l=~~(C/p.shape[1]),c=C-l*p.shape[1],S=p.get(l,c,0),h=p.get(l,c,1),d=p.get(l,c,2);S>0&&f.push([S,h,d])}f=(f=f.sort((function(e,a){return a[0]-e[0]}))).slice(0,i.PCLINES.count);for(var P=0;P<f.length;P+=1)u.line.fromParallelCoords(f[P][1]*i.PROCESSING.dCoef,f[P][2]*i.PROCESSING.dCoef,s.shape[1],s.shape[0],m,m/2),t.dH(n,u.line,"rgba(0, 255, 0, 1.0)")},params:{PROCESSING:{name:"PROCESSING",dCoef:{name:"Downsample",type:"constant",min:1,max:4,step:1,default:2}},PCLINES:{name:"PC LINES",count:{name:"Lines Count",type:"uniform",min:1,max:100,step:1,default:10},layers:{name:"Layers Count",type:"constant",min:1,max:5,step:1,default:2}}}}}}]);