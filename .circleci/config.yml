version: 2.1

aliases:
  - &docker-node-browsers
    - image: circleci/node:12.18.4-browsers

  - &restore-node-modules-cache
    name: Restore node_modules cache
    key: npm-deps-{{ checksum "package.json" }}-{{ checksum "app/package.json" }}

  - &save-node-modules-cache
    name: Save node_modules cache
    paths:
      - node_modules
      - app/node_modules
    key: npm-deps-{{ checksum "package.json" }}-{{ checksum "app/package.json" }}

jobs:
  checkout-code:
    docker: *docker-node-browsers
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - run: npm install
      - run: npm install --prefix app/
      - save_cache: *save-node-modules-cache
      - persist_to_workspace:
          root: "."
          paths:
            - node_modules
            - app/node_modules

  lint:
    docker: *docker-node-browsers
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: npm run lint
      - run: npm run lint --prefix app/

  test:
    docker: *docker-node-browsers
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: npm run test
  
  build_app:
    docker: *docker-node-browsers
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: npm run build
      - run: npm run build --prefix app/
      - persist_to_workspace:
          root: "."
          paths:
            - app/out

  deploy_app:
    docker: *docker-node-browsers
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: |
          git config user.email "$GH_EMAIL"
          git config user.name "$GH_NAME"
          npm run deploy:gh-pages --prefix app/

workflows:
  version: 2
  compile_lint_test_deploy:
    jobs:
      - checkout-code
      - lint:
          requires: [
            checkout-code
          ]
      - test:
          requires: [
            checkout-code
          ]
      - build_app:
          requires: [
            test,
            lint
          ]
      - deploy_app:
          requires: [
            build_app
          ]
          filters:
            branches:
              only:
                - master