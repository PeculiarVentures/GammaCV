[
  {
    "key": "morphology",
    "name": "MORPHOLOGY",
    "examples": [
      {
        "type": "video",
        "name": "Erosion",
        "path": "erode"
      },
      {
        "type": "video",
        "name": "Dilation",
        "path": "dilate"
      },
      {
        "type": "video",
        "name": "Extended Morphology",
        "path": "morphology_ex",
        "description": "Image processing often requires form approximation, detecting structure, and remove imperfections of original data. Morphological Operations could help reach these goals, and GammaCV makes it possible to use GPU computational power in browser with gm.morphologyEx op which supports the next morphological operations: open, close, gradient, tophat, blackhat."
      }
    ]
  },
  {
    "key": "processing",
    "name": "PROCESSING",
    "examples": [
      {
        "type": "video",
        "name": "Gaussian Blur",
        "path": "gaussian_blur"
      },
      {
        "type": "video",
        "name": "Convolution",
        "path": "conv2d"
      }, {
        "type": "video",
        "name": "Downsample",
        "path": "downsample"
      }, {
        "type": "video",
        "name": "Upsample",
        "path": "upsample"
      }, {
          "type": "video",
          "name": "Resize",
          "path": "resize"
        }, {
        "type": "video",
        "name": "Color Segmentation",
        "path": "color_segmentation"
      },
      {
        "type": "video",
        "name": "Normalization",
        "path": "norm"
      },
      {
        "type": "video",
        "name": "Histogram Equalization",
        "path": "histogram_equalization",
        "description": "Equalize the histogram of an image or other data with a gm.histogramEqualization operation."
      },
      {
        "type": "video",
        "name": "HSV Color Converter",
        "path": "hsv_color"
      },
      {
        "type": "video",
        "name": "Threshold",
        "path": "threshold"
      },{
        "type": "video",
        "name": "Adaptive Threshold",
        "path": "adaptive_threshold"
      },{
        "type": "video",
        "name": "Summed Area Table",
        "path": "sat"
      }
    ]
  },
  {
    "key": "feature_extraction",
    "name": "Feature extraction",
    "examples": [
      {
        "type": "video",
        "name": "Hog",
        "path": "hog"
      },
      {
        "type": "video",
        "name": "Canny Edges",
        "path": "canny_edges"
      },
      {
        "type": "video",
        "name": "Skin Test",
        "path": "skin_test"
      },
      {
        "type": "video",
        "name": "PCLinest",
        "path": "pc_lines",
        "description": "Implementation of Hough transform algorithm in parallel line space, also known as PC Lines."
      },
      {
        "type": "video",
        "name": "Extract Mean and Std",
        "path": "extract_mean_std",
        "description": "Extracting a mean and standard deviation from a data is computational expensive problem for large data. GammaCV makes it possible to compute mean and std from data in browser via GPU power with a gm.meanStd operation."
      },
      {
        "type": "video",
        "name": "Stroke Width Transform",
        "path": "swt"
      },
      {
        "type": "video",
        "name": "Extract Histogram",
        "path": "histogram",
        "description": "Extracting a histogram from an image or other data is a computational expensive problem especially for large data. GammaCV makes it possible to extract histogram from data (image) in the browser via GPU power with a gm.histogram operation."
      }
    ]
  },
  {
    "key": "image_derivatives",
    "name": "Image Derivatives",
    "examples": [
      {
        "type": "video",
        "name": "Sobel Operator",
        "path": "sobel_operator"
      }
    ]
  }, {
    "key": "math",
    "name": "Math",
    "examples": [
      {
        "type": "video",
        "name": "Tensor Scalar",
        "path": "math_tensor_scalar",
        "description": "GammaCV makes it possible to operate on an image or other data with scalars and simple math operations, like subScalar, addScalar, divScalar, multScalar."
      },
      {
        "type": "video",
        "name": "Pixelwise Math",
        "path": "math_pixelwise",
        "description": "Image processing or massive data manipulation problems may require simple math operations with 2 operands. There are several GammaCV operations that make it possible to be powered by GPU using WebGL in the browser: gm.sub, gm.add, gm.div, gm.mult. These chainable operations could help in achieving image diff (via Sub op), parallel (like a SIMD) numbers manipulation."
      }
    ]
  }
]
