{"pageProps":{"id":"histogram","data":"## Histogram\n\n###### Description\n\nExtract histogram for given image and parameters.\n Results in [1, histogramRange, 4] float matrix.\n\n###### Params\n\n| Param | Type | Description |\n| --- | --- | --- |\n|**tSrc**|<var>[Tensor](/docs/tensor#Tensor)</var>|Input image|\n|**layers?**|<var>number</var>|Number of layers for a parallel reduction (1 by default), impact the performance|\n|**min?**|<var>number</var>|Minimal value in image|\n|**max?**|<var>number</var>|Maximum value in image|\n|**step?**|<var>number</var>|Step between min and max values.|\n\n###### Example\n\n```js\ngm.histogram(tSrc);\n```\n```js\nconst op = gm.histogram(tSrc);\n// ... init, run, read into tOut, see Get Started for details ...\ntOut.get(0, 0, 0); // get n of entires for lowest value in red channel\ntOut.get(0, tOut.shape[1] - 1, 4); // get n of entries for highest value in \"alpha\" channel\n```\n\n"},"__N_SSG":true}